import * as XLSX from 'xlsx';
import { Injured, Guardian } from '../types';

// ุชุญููู ุฑูู Excel ุงูุชุณูุณูู ุฅูู ุชุงุฑูุฎ
const excelDateToJSDate = (excelDate: number): Date => {
  const excelEpoch = new Date(1899, 11, 30);
  const jsDate = new Date(excelEpoch.getTime() + excelDate * 24 * 60 * 60 * 1000);
  return jsDate;
};

// ุฏุงูุฉ ุดุงููุฉ ูุชุญููู ุฃู ุตูุบุฉ ุชุงุฑูุฎ ุฅูู ISO
const parseAnyDateFormat = (dateValue: any): string | null => {
  if (!dateValue) return null;
  
  try {
    // ุฅุฐุง ูุงู ุฑูู (Excel serial date)
    if (typeof dateValue === 'number') {
      if (dateValue > 1 && dateValue < 100000) {
        const jsDate = excelDateToJSDate(dateValue);
        return jsDate.toISOString().split('T')[0];
      }
    }
    
    // ุฅุฐุง ูุงู ูุงุฆู Date
    if (dateValue instanceof Date && !isNaN(dateValue.getTime())) {
      return dateValue.toISOString().split('T')[0];
    }
    
    // ุฅุฐุง ูุงู ูุตุ ุฌุฑุจ ุตูุบ ูุฎุชููุฉ
    if (typeof dateValue === 'string') {
      const dateStr = dateValue.toString().trim();
      
      // ุฌุฑุจ ุงูุชุญููู ุงููุจุงุดุฑ ุฃููุงู
      let date = new Date(dateStr);
      if (!isNaN(date.getTime())) {
        return date.toISOString().split('T')[0];
      }
      
      // ุตูุบ ูุฎุชููุฉ ููุชุงุฑูุฎ
      const dateFormats = [
        /^(\d{4})-(\d{1,2})-(\d{1,2})$/,
        /^(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{4})$/,
        /^(\d{4})[\/\-](\d{1,2})[\/\-](\d{1,2})$/,
        /^(\d{1,2})\.(\d{1,2})\.(\d{4})$/,
        /^(\d{4})\.(\d{1,2})\.(\d{1,2})$/
      ];
      
      for (const format of dateFormats) {
        const match = dateStr.match(format);
        if (match) {
          let year, month, day;
          
          if (format.source.startsWith('^(\\d{4})')) {
            year = parseInt(match[1]);
            month = parseInt(match[2]);
            day = parseInt(match[3]);
          } else if (format.source.includes('(\\d{4})$')) {
            day = parseInt(match[1]);
            month = parseInt(match[2]);
            year = parseInt(match[3]);
          } else {
            month = parseInt(match[1]);
            day = parseInt(match[2]);
            year = parseInt(match[3]);
          }
          
          if (year >= 2020 && year <= 2030 && month >= 1 && month <= 12 && day >= 1 && day <= 31) {
            date = new Date(year, month - 1, day);
            if (!isNaN(date.getTime())) {
              return date.toISOString().split('T')[0];
            }
          }
        }
      }
    }
    
    return null;
  } catch (error) {
    console.warn('ุฎุทุฃ ูู ุชุญููู ุงูุชุงุฑูุฎ:', dateValue, error);
    return null;
  }
};

// ุฅูุดุงุก ูุงูุจ Excel ููุฌุฑุญู
export const createInjuredTemplate = (guardians: Guardian[]) => {
  const templateData = [
    {
      'ุงุณู ุงูุฌุฑูุญ': 'ูุซุงู: ุฃุญูุฏ ูุญูุฏ ุงูุณุงูู',
      'ุฑูู ูููุฉ ุงูุฌุฑูุญ': '123456789',
      'ุฑูู ุงูุฌูุงู': '0597123456',
      'ุชุงุฑูุฎ ุงูุฅุตุงุจุฉ': '2024-03-15',
      'ููุน ุงูุฅุตุงุจุฉ': 'ุฅุตุงุจุฉ ูุชูุณุทุฉ',
      'ููุงุญุธุงุช': 'ููุงุญุธุงุช ุฅุถุงููุฉ'
    }
  ];

  // ุฅูุดุงุก ูุฑูุฉ ุงูุนูู
  const worksheet = XLSX.utils.json_to_sheet(templateData);

  // ุชุนููู ุงุชุฌุงู RTL ูููุฑูุฉ
  worksheet['!dir'] = 'rtl';

  // ุชุนููู ุนุฑุถ ุงูุฃุนูุฏุฉ
  const columnWidths = [
    { wch: 25 }, // ุงุณู ุงูุฌุฑูุญ
    { wch: 20 }, // ุฑูู ูููุฉ ุงูุฌุฑูุญ
    { wch: 15 }, // ุฑูู ุงูุฌูุงู
    { wch: 15 }, // ุชุงุฑูุฎ ุงูุฅุตุงุจุฉ
    { wch: 20 }, // ููุน ุงูุฅุตุงุจุฉ
    { wch: 30 }  // ููุงุญุธุงุช
  ];
  worksheet['!cols'] = columnWidths;

  // ุฅูุดุงุก ูุฑูุฉ ุฃูููุงุก ุงูุฃููุฑ ุงููุชุงุญูู
  const guardiansData = guardians.map(guardian => ({
    'ุฑูู ููู ุงูุฃูุฑ': guardian.id,
    'ุงุณู ููู ุงูุฃูุฑ': guardian.name,
    'ุฑูู ูููุฉ ููู ุงูุฃูุฑ': guardian.nationalId,
    'ุฑูู ุงููุงุชู': guardian.phone,
    'ุงูููุทูุฉ': guardian.area?.name || 'ุบูุฑ ูุญุฏุฏ',
    'ุงูุญุงูุฉ ุงูุงุฌุชูุงุนูุฉ': guardian.maritalStatus,
    'ุญุงูุฉ ุงูุฅูุงูุฉ': guardian.residenceStatus === 'displaced' ? 'ูุงุฒุญ' : 'ูููู'
  }));

  const guardiansWorksheet = XLSX.utils.json_to_sheet(guardiansData);
  guardiansWorksheet['!dir'] = 'rtl';
  guardiansWorksheet['!cols'] = [
    { wch: 15 }, // ุฑูู ููู ุงูุฃูุฑ
    { wch: 25 }, // ุงุณู ููู ุงูุฃูุฑ
    { wch: 20 }, // ุฑูู ูููุฉ ููู ุงูุฃูุฑ
    { wch: 15 }, // ุฑูู ุงููุงุชู
    { wch: 20 }, // ุงูููุทูุฉ
    { wch: 18 }, // ุงูุญุงูุฉ ุงูุงุฌุชูุงุนูุฉ
    { wch: 15 }  // ุญุงูุฉ ุงูุฅูุงูุฉ
  ];

  // ุฅูุดุงุก ูุฑูุฉ ุฃููุงุน ุงูุฅุตุงุจุงุช
  const injuryTypesData = [
    { 'ููุน ุงูุฅุตุงุจุฉ': 'ุฅุตุงุจุฉ ุฎุทูุฑุฉ', 'ุงููุตู': 'ุฅุตุงุจุฉ ุฎุทูุฑุฉ ุชูุฏุฏ ุงูุญูุงุฉ' },
    { 'ููุน ุงูุฅุตุงุจุฉ': 'ุฅุตุงุจุฉ ูุชูุณุทุฉ', 'ุงููุตู': 'ุฅุตุงุจุฉ ูุชูุณุทุฉ ุงูุฎุทูุฑุฉ' },
    { 'ููุน ุงูุฅุตุงุจุฉ': 'ุฅุตุงุจุฉ ุจุณูุทุฉ', 'ุงููุตู': 'ุฅุตุงุจุฉ ุจุณูุทุฉ ุบูุฑ ุฎุทูุฑุฉ' },
    { 'ููุน ุงูุฅุตุงุจุฉ': 'ุฅุตุงุจุฉ ุจุงูุฑุฃุณ', 'ุงููุตู': 'ุฅุตุงุจุฉ ูู ููุทูุฉ ุงูุฑุฃุณ' },
    { 'ููุน ุงูุฅุตุงุจุฉ': 'ุฅุตุงุจุฉ ุจุงูุฃุทุฑุงู', 'ุงููุตู': 'ุฅุตุงุจุฉ ูู ุงูุฃุทุฑุงู ุงูุนูููุฉ ุฃู ุงูุณูููุฉ' },
    { 'ููุน ุงูุฅุตุงุจุฉ': 'ุฅุตุงุจุฉ ุจุงูุตุฏุฑ', 'ุงููุตู': 'ุฅุตุงุจุฉ ูู ููุทูุฉ ุงูุตุฏุฑ' },
    { 'ููุน ุงูุฅุตุงุจุฉ': 'ุฅุตุงุจุฉ ุจุงูุจุทู', 'ุงููุตู': 'ุฅุตุงุจุฉ ูู ููุทูุฉ ุงูุจุทู' },
    { 'ููุน ุงูุฅุตุงุจุฉ': 'ุฅุตุงุจุฉ ุจุงูุนููุฏ ุงูููุฑู', 'ุงููุตู': 'ุฅุตุงุจุฉ ูู ุงูุนููุฏ ุงูููุฑู' },
    { 'ููุน ุงูุฅุตุงุจุฉ': 'ุฅุตุงุจุฉ ุจุงูุนูู', 'ุงููุตู': 'ุฅุตุงุจุฉ ูู ุงูุนูู' },
    { 'ููุน ุงูุฅุตุงุจุฉ': 'ุญุฑูู', 'ุงููุตู': 'ุฅุตุงุจุฉ ุญุฑูู ูู ุงูุฏุฑุฌุฉ ุงูุฃููู ุฃู ุงูุซุงููุฉ ุฃู ุงูุซุงูุซุฉ' },
    { 'ููุน ุงูุฅุตุงุจุฉ': 'ุจุชุฑ', 'ุงููุตู': 'ุจุชุฑ ูู ุฃุญุฏ ุฃุฌุฒุงุก ุงูุฌุณู' },
    { 'ููุน ุงูุฅุตุงุจุฉ': 'ุฅุตุงุจุฉ ุฃุฎุฑู', 'ุงููุตู': 'ุฃู ููุน ุขุฎุฑ ูู ุงูุฅุตุงุจุงุช' }
  ];

  const injuryTypesWorksheet = XLSX.utils.json_to_sheet(injuryTypesData);
  injuryTypesWorksheet['!dir'] = 'rtl';
  injuryTypesWorksheet['!cols'] = [
    { wch: 25 }, // ููุน ุงูุฅุตุงุจุฉ
    { wch: 40 }  // ุงููุตู
  ];

  // ุฅูุดุงุก ูุฑูุฉ ุงูุชุนูููุงุช
  const instructionsData = [
    { 'ุงูุชุนูููุงุช': '๐ ููุงุญุธุงุช ูููุฉ ูููุก ุจูุงูุงุช ุงูุฌุฑุญู:' },
    { 'ุงูุชุนูููุงุช': '' },
    { 'ุงูุชุนูููุงุช': 'โ ุงูุญููู ุงููุทููุจุฉ:' },
    { 'ุงูุชุนูููุงุช': '1. ุงุณู ุงูุฌุฑูุญ (ูุทููุจ)' },
    { 'ุงูุชุนูููุงุช': '2. ุฑูู ูููุฉ ุงูุฌุฑูุญ (ูุทููุจ)' },
    { 'ุงูุชุนูููุงุช': '3. ุฑูู ุงูุฌูุงู (ูุทููุจ)' },
    { 'ุงูุชุนูููุงุช': '4. ุชุงุฑูุฎ ุงูุฅุตุงุจุฉ (ูุทููุจ)' },
    { 'ุงูุชุนูููุงุช': '5. ููุน ุงูุฅุตุงุจุฉ (ูุทููุจ)' },
    { 'ุงูุชุนูููุงุช': '6. ุงูููุงุญุธุงุช (ุงุฎุชูุงุฑู)' },
    { 'ุงูุชุนูููุงุช': '' },
    { 'ุงูุชุนูููุงุช': '๐ ุตูุบ ุงูุชุงุฑูุฎ ุงููุฏุนููุฉ:' },
    { 'ุงูุชุนูููุงุช': 'โข 2024-03-15 (ุงูุณูุฉ-ุงูุดูุฑ-ุงูููู) - ุงูุฃูุถู' },
    { 'ุงูุชุนูููุงุช': 'โข 15/3/2024 (ุงูููู/ุงูุดูุฑ/ุงูุณูุฉ)' },
    { 'ุงูุชุนูููุงุช': 'โข 15-3-2024 (ุงูููู-ุงูุดูุฑ-ุงูุณูุฉ)' },
    { 'ุงูุชุนูููุงุช': 'โข 15.3.2024 (ุงูููู.ุงูุดูุฑ.ุงูุณูุฉ)' },
    { 'ุงูุชุนูููุงุช': '' },
    { 'ุงูุชุนูููุงุช': '๐ฉบ ุฃููุงุน ุงูุฅุตุงุจุงุช ุงููุชุงุญุฉ:' },
    { 'ุงูุชุนูููุงุช': 'โข ุฅุตุงุจุฉ ุฎุทูุฑุฉุ ุฅุตุงุจุฉ ูุชูุณุทุฉุ ุฅุตุงุจุฉ ุจุณูุทุฉ' },
    { 'ุงูุชุนูููุงุช': 'โข ุฅุตุงุจุฉ ุจุงูุฑุฃุณุ ุฅุตุงุจุฉ ุจุงูุฃุทุฑุงูุ ุฅุตุงุจุฉ ุจุงูุตุฏุฑ' },
    { 'ุงูุชุนูููุงุช': 'โข ุฅุตุงุจุฉ ุจุงูุจุทูุ ุฅุตุงุจุฉ ุจุงูุนููุฏ ุงูููุฑูุ ุฅุตุงุจุฉ ุจุงูุนูู' },
    { 'ุงูุชุนูููุงุช': 'โข ุญุฑููุ ุจุชุฑุ ุฅุตุงุจุฉ ุฃุฎุฑู' },
    { 'ุงูุชุนูููุงุช': 'โข ุฑุงุฌุน ูุฑูุฉ "ุฃููุงุน ุงูุฅุตุงุจุงุช" ููุชูุงุตูู' },
    { 'ุงูุชุนูููุงุช': '' },
    { 'ุงูุชุนูููุงุช': '๐ฑ ุฑูู ุงูุฌูุงู:' },
    { 'ุงูุชุนูููุงุช': 'โข ูููู ุงุณุชุฎุฏุงู ุจูุงูุงุช ููู ุฃูุฑ ููุฌูุฏ ูู ุงููุธุงู' },
    { 'ุงูุชุนูููุงุช': 'โข ุฑุงุฌุน ูุฑูุฉ "ุฃูููุงุก ุงูุฃููุฑ ุงููุชุงุญูู" ููุงุณุชูุงุฏุฉ ูู ุจูุงูุงุชูู' },
    { 'ุงูุชุนูููุงุช': 'โข ูููู ุฅุฏุฎุงู ุฑูู ุฌูุงู ุฌุฏูุฏ ุฅุฐุง ูู ููู ุงูุฌุฑูุญ ูุณุฌูุงู ูููู ุฃูุฑ' },
    { 'ุงูุชุนูููุงุช': '' },
    { 'ุงูุชุนูููุงุช': '๐ก ูุตุงุฆุญ ูุชุฌูุจ ุงูุฃุฎุทุงุก:' },
    { 'ุงูุชุนูููุงุช': 'โข ุชุฃูุฏ ูู ุตุญุฉ ุฃุฑูุงู ุงููููุฉ ูุจู ุงูุงุณุชูุฑุงุฏ' },
    { 'ุงูุชุนูููุงุช': 'โข ุงุณุชุฎุฏู ุตูุบุฉ ุงูุชุงุฑูุฎ ุงูููุถูุฉ: YYYY-MM-DD' },
    { 'ุงูุชุนูููุงุช': 'โข ุชุฃูุฏ ูู ูุชุงุจุฉ ููุน ุงูุฅุตุงุจุฉ ุจุงูุถุจุท ููุง ูู ููุชูุจ' },
    { 'ุงูุชุนูููุงุช': 'โข ูู ุญุงูุฉ ูุฌูุฏ ุฃุฎุทุงุกุ ุณูุชู ุชุญููู ููู ุงูุฃุฎุทุงุก ุชููุงุฆูุงู' },
    { 'ุงูุชุนูููุงุช': 'โข ูุง ุชุชุฑู ุฎุงูุงุช ูุงุฑุบุฉ ูู ุงูุญููู ุงููุทููุจุฉ' }
  ];

  const instructionsWorksheet = XLSX.utils.json_to_sheet(instructionsData);
  instructionsWorksheet['!dir'] = 'rtl';
  instructionsWorksheet['!cols'] = [{ wch: 80 }];

  // ุฅูุดุงุก ูุชุงุจ ุงูุนูู
  const workbook = XLSX.utils.book_new();
  XLSX.utils.book_append_sheet(workbook, worksheet, 'ูุงูุจ ุงูุฌุฑุญู');
  XLSX.utils.book_append_sheet(workbook, guardiansWorksheet, 'ุฃูููุงุก ุงูุฃููุฑ ุงููุชุงุญูู');
  XLSX.utils.book_append_sheet(workbook, injuryTypesWorksheet, 'ุฃููุงุน ุงูุฅุตุงุจุงุช');
  XLSX.utils.book_append_sheet(workbook, instructionsWorksheet, 'ุงูุชุนูููุงุช');

  // ุชุนููู ุฎุตุงุฆุต RTL ูููุชุงุจ
  workbook.Props = {
    Title: 'ูุงูุจ ุงูุฌุฑุญู',
    Subject: 'ูุงูุจ ูุงุณุชูุฑุงุฏ ุจูุงูุงุช ุงูุฌุฑุญู',
    Author: 'ูุธุงู ุงููุณุงุนุฏุงุช - ูุทุงุน ุบุฒุฉ',
    CreatedDate: new Date()
  };

  return workbook;
};

// ุชุตุฏูุฑ ุจูุงูุงุช ุงูุฌุฑุญู ุฅูู Excel
export const exportInjuredToExcel = (injured: Injured[]) => {
  const exportData = injured.map(injuredPerson => ({
    'ุงุณู ุงูุฌุฑูุญ': injuredPerson.name,
    'ุฑูู ูููุฉ ุงูุฌุฑูุญ': injuredPerson.nationalId,
    'ุฑูู ุงูุฌูุงู': injuredPerson.phone,
    'ุชุงุฑูุฎ ุงูุฅุตุงุจุฉ': injuredPerson.injuryDate,
    'ููุน ุงูุฅุตุงุจุฉ': injuredPerson.injuryType,
    'ููุงุญุธุงุช': injuredPerson.notes || '',
    'ุชุงุฑูุฎ ุงูุชุณุฌูู': new Date(injuredPerson.createdAt).toLocaleDateString('ar-EG'),
    'ุขุฎุฑ ุชุญุฏูุซ': new Date(injuredPerson.updatedAt).toLocaleDateString('ar-EG')
  }));

  const worksheet = XLSX.utils.json_to_sheet(exportData);
  worksheet['!dir'] = 'rtl';
  
  // ุชุนููู ุนุฑุถ ุงูุฃุนูุฏุฉ
  worksheet['!cols'] = [
    { wch: 25 }, // ุงุณู ุงูุฌุฑูุญ
    { wch: 20 }, // ุฑูู ูููุฉ ุงูุฌุฑูุญ
    { wch: 15 }, // ุฑูู ุงูุฌูุงู
    { wch: 15 }, // ุชุงุฑูุฎ ุงูุฅุตุงุจุฉ
    { wch: 20 }, // ููุน ุงูุฅุตุงุจุฉ
    { wch: 30 }, // ููุงุญุธุงุช
    { wch: 15 }, // ุชุงุฑูุฎ ุงูุชุณุฌูู
    { wch: 15 }  // ุขุฎุฑ ุชุญุฏูุซ
  ];

  const workbook = XLSX.utils.book_new();
  XLSX.utils.book_append_sheet(workbook, worksheet, 'ุจูุงูุงุช ุงูุฌุฑุญู');

  workbook.Props = {
    Title: 'ุจูุงูุงุช ุงูุฌุฑุญู',
    Subject: 'ุชุตุฏูุฑ ุจูุงูุงุช ุงูุฌุฑุญู',
    Author: 'ูุธุงู ุงููุณุงุนุฏุงุช - ูุทุงุน ุบุฒุฉ',
    CreatedDate: new Date()
  };

  return workbook;
};

// ูุฑุงุกุฉ ููู Excel ูุงุณุชูุฑุงุฏ ุจูุงูุงุช ุงูุฌุฑุญู ูุน ุงูุชุญูู ูู ุงูุฃุฎุทุงุก
export const importInjuredFromExcel = (file: File, guardians: Guardian[]): Promise<{
  validInjured: Partial<Injured>[];
  errors: Array<{row: number, field: string, message: string}>;
}> => {
  return new Promise((resolve, reject) => {
    const reader = new FileReader();
    
    reader.onload = (e) => {
      try {
        const data = new Uint8Array(e.target?.result as ArrayBuffer);
        const workbook = XLSX.read(data, { 
          type: 'array', 
          cellDates: false,
          raw: false,
          dateNF: 'yyyy-mm-dd'
        });
        const worksheet = workbook.Sheets[workbook.SheetNames[0]];
        const jsonData = XLSX.utils.sheet_to_json(worksheet, { 
          raw: false,
          defval: '',
          blankrows: false
        });

        const validInjured: Partial<Injured>[] = [];
        const errors: Array<{row: number, field: string, message: string}> = [];

        // ุฃููุงุน ุงูุฅุตุงุจุงุช ุงููุชุงุญุฉ
        const injuryTypes = [
          'ุฅุตุงุจุฉ ุฎุทูุฑุฉ',
          'ุฅุตุงุจุฉ ูุชูุณุทุฉ',
          'ุฅุตุงุจุฉ ุจุณูุทุฉ',
          'ุฅุตุงุจุฉ ุจุงูุฑุฃุณ',
          'ุฅุตุงุจุฉ ุจุงูุฃุทุฑุงู',
          'ุฅุตุงุจุฉ ุจุงูุตุฏุฑ',
          'ุฅุตุงุจุฉ ุจุงูุจุทู',
          'ุฅุตุงุจุฉ ุจุงูุนููุฏ ุงูููุฑู',
          'ุฅุตุงุจุฉ ุจุงูุนูู',
          'ุญุฑูู',
          'ุจุชุฑ',
          'ุฅุตุงุจุฉ ุฃุฎุฑู'
        ];

        jsonData.forEach((row: any, index: number) => {
          const rowNumber = index + 2;
          const injuredPerson: Partial<Injured> = {};
          let hasErrors = false;

          // ุงุณู ุงูุฌุฑูุญ (ูุทููุจ)
          const name = row['ุงุณู ุงูุฌุฑูุญ'] || '';
          if (!name || name.toString().trim() === '') {
            errors.push({row: rowNumber, field: 'ุงุณู ุงูุฌุฑูุญ', message: 'ุงุณู ุงูุฌุฑูุญ ูุทููุจ'});
            hasErrors = true;
          } else {
            injuredPerson.name = name.toString().trim();
          }

          // ุฑูู ูููุฉ ุงูุฌุฑูุญ (ูุทููุจ)
          const nationalId = row['ุฑูู ูููุฉ ุงูุฌุฑูุญ'] || '';
          if (!nationalId || nationalId.toString().trim() === '') {
            errors.push({row: rowNumber, field: 'ุฑูู ูููุฉ ุงูุฌุฑูุญ', message: 'ุฑูู ูููุฉ ุงูุฌุฑูุญ ูุทููุจ'});
            hasErrors = true;
          } else {
            injuredPerson.nationalId = nationalId.toString().trim();
            
            // ุงูุชุญูู ูู ูุฌูุฏ ููู ุฃูุฑ ุจููุณ ุฑูู ุงููููุฉ ูุงุณุชุฎุฏุงู ุจูุงูุงุชู
            const guardian = guardians.find(g => g.nationalId === nationalId.toString().trim());
            if (guardian) {
              injuredPerson.phone = guardian.phone;
            }
          }

          // ุฑูู ุงูุฌูุงู (ูุทููุจ)
          const phone = row['ุฑูู ุงูุฌูุงู'] || '';
          if (!phone || phone.toString().trim() === '') {
            if (!injuredPerson.phone) { // ุฅุฐุง ูู ูุชู ุชุนูููู ูู ููู ุงูุฃูุฑ
              errors.push({row: rowNumber, field: 'ุฑูู ุงูุฌูุงู', message: 'ุฑูู ุงูุฌูุงู ูุทููุจ'});
              hasErrors = true;
            }
          } else {
            injuredPerson.phone = phone.toString().trim();
          }

          // ุชุงุฑูุฎ ุงูุฅุตุงุจุฉ (ูุทููุจ)
          const injuryDateValue = row['ุชุงุฑูุฎ ุงูุฅุตุงุจุฉ'];
          if (!injuryDateValue) {
            errors.push({row: rowNumber, field: 'ุชุงุฑูุฎ ุงูุฅุตุงุจุฉ', message: 'ุชุงุฑูุฎ ุงูุฅุตุงุจุฉ ูุทููุจ'});
            hasErrors = true;
          } else {
            const parsedDate = parseAnyDateFormat(injuryDateValue);
            if (!parsedDate) {
              errors.push({
                row: rowNumber, 
                field: 'ุชุงุฑูุฎ ุงูุฅุตุงุจุฉ', 
                message: `ุชุงุฑูุฎ ุงูุฅุตุงุจุฉ ุบูุฑ ุตุญูุญ: "${injuryDateValue}". ุงุณุชุฎุฏู ุตูุบุฉ ูุซู: 2024-03-15 ุฃู 15/3/2024`
              });
              hasErrors = true;
            } else {
              injuredPerson.injuryDate = parsedDate;
            }
          }

          // ููุน ุงูุฅุตุงุจุฉ (ูุทููุจ)
          const injuryType = row['ููุน ุงูุฅุตุงุจุฉ'] || '';
          if (!injuryType || injuryType.toString().trim() === '') {
            errors.push({row: rowNumber, field: 'ููุน ุงูุฅุตุงุจุฉ', message: 'ููุน ุงูุฅุตุงุจุฉ ูุทููุจ'});
            hasErrors = true;
          } else {
            const injuryTypeStr = injuryType.toString().trim();
            if (injuryTypes.includes(injuryTypeStr)) {
              injuredPerson.injuryType = injuryTypeStr;
            } else {
              errors.push({
                row: rowNumber, 
                field: 'ููุน ุงูุฅุตุงุจุฉ', 
                message: `ููุน ุงูุฅุตุงุจุฉ ุบูุฑ ุตุญูุญ: "${injuryTypeStr}". ุงูุฃููุงุน ุงููุชุงุญุฉ: ${injuryTypes.join(', ')}`
              });
              hasErrors = true;
            }
          }

          // ุงูููุงุญุธุงุช (ุงุฎุชูุงุฑู)
          injuredPerson.notes = (row['ููุงุญุธุงุช'] || '').toString().trim();

          if (!hasErrors) {
            validInjured.push(injuredPerson);
          }
        });

        resolve({ validInjured, errors });
      } catch (error) {
        console.error('ุฎุทุฃ ูู ูุฑุงุกุฉ ููู Excel:', error);
        reject(new Error(`ุฎุทุฃ ูู ูุฑุงุกุฉ ุงูููู: ${error instanceof Error ? error.message : 'ุฎุทุฃ ุบูุฑ ูุนุฑูู'}. ุชุฃูุฏ ูู ุฃู ุงูููู ุจุตูุบุฉ Excel ุตุญูุญุฉ.`));
      }
    };

    reader.onerror = () => {
      reject(new Error('ุฎุทุฃ ูู ูุฑุงุกุฉ ุงูููู. ุชุฃูุฏ ูู ุฃู ุงูููู ุบูุฑ ุชุงูู.'));
    };

    reader.readAsArrayBuffer(file);
  });
};

// ุชุตุฏูุฑ ููู ุงูุฃุฎุทุงุก
export const exportInjuredErrorsToExcel = (errors: Array<{row: number, field: string, message: string}>) => {
  const errorData = errors.map((error, index) => ({
    'ุฑูู ุงูุฎุทุฃ': index + 1,
    'ุฑูู ุงูุตู ูู ุงูููู': error.row,
    'ุงูุญูู ุงููุชุฃุซุฑ': error.field,
    'ูุตู ุงููุดููุฉ': error.message,
    'ููุน ุงูุฎุทุฃ': error.field === 'ุชุงุฑูุฎ ุงูุฅุตุงุจุฉ' ? 'ุฎุทุฃ ูู ุงูุชุงุฑูุฎ' : 
                  error.field === 'ููุน ุงูุฅุตุงุจุฉ' ? 'ุฎุทุฃ ูู ููุน ุงูุฅุตุงุจุฉ' : 'ุฎุทุฃ ูู ุงูุจูุงูุงุช'
  }));

  const worksheet = XLSX.utils.json_to_sheet(errorData);
  worksheet['!dir'] = 'rtl';
  worksheet['!cols'] = [
    { wch: 12 }, // ุฑูู ุงูุฎุทุฃ
    { wch: 15 }, // ุฑูู ุงูุตู ูู ุงูููู
    { wch: 20 }, // ุงูุญูู ุงููุชุฃุซุฑ
    { wch: 60 }, // ูุตู ุงููุดููุฉ
    { wch: 20 }  // ููุน ุงูุฎุทุฃ
  ];

  // ุฅุถุงูุฉ ูุฑูุฉ ุญููู ููุฃุฎุทุงุก ุงูุดุงุฆุนุฉ
  const solutionsData = [
    { 'ุงูุญููู': '๐ง ุญููู ููุฃุฎุทุงุก ุงูุดุงุฆุนุฉ:' },
    { 'ุงูุญููู': '' },
    { 'ุงูุญููู': '๐ ูุดุงูู ุงูุชุงุฑูุฎ:' },
    { 'ุงูุญููู': 'โข ุชุฃูุฏ ูู ุงุณุชุฎุฏุงู ุตูุบุฉ ุตุญูุญุฉ: 2024-03-15 ุฃู 15/3/2024' },
    { 'ุงูุญููู': 'โข ุชุฌูุจ ุชุฑู ุฎุงูุฉ ุงูุชุงุฑูุฎ ูุงุฑุบุฉ' },
    { 'ุงูุญููู': 'โข ุงุณุชุฎุฏู ุชูุงุฑูุฎ ููุทููุฉ (2020-2030)' },
    { 'ุงูุญููู': '' },
    { 'ุงูุญููู': '๐ฉบ ูุดุงูู ููุน ุงูุฅุตุงุจุฉ:' },
    { 'ุงูุญููู': 'โข ุงุณุชุฎุฏู ุงูุฃููุงุน ุงููุญุฏุฏุฉ ููุท ูู ูุฑูุฉ "ุฃููุงุน ุงูุฅุตุงุจุงุช"' },
    { 'ุงูุญููู': 'โข ุชุฃูุฏ ูู ูุชุงุจุฉ ุงูููุน ุจุงูุถุจุท ููุง ูู ููุชูุจ' },
    { 'ุงูุญููู': 'โข ูุง ุชุถุน ูุณุงูุงุช ุฅุถุงููุฉ ูุจู ุฃู ุจุนุฏ ุงูููุน' },
    { 'ุงูุญููู': '' },
    { 'ุงูุญููู': '๐ฑ ูุดุงูู ุฑูู ุงูุฌูุงู:' },
    { 'ุงูุญููู': 'โข ุชุฃูุฏ ูู ุฅุฏุฎุงู ุฑูู ุฌูุงู ุตุญูุญ' },
    { 'ุงูุญููู': 'โข ูููู ุงูุงุณุชูุงุฏุฉ ูู ุจูุงูุงุช ุฃูููุงุก ุงูุฃููุฑ ุงูููุฌูุฏูู' },
    { 'ุงูุญููู': 'โข ุฅุฐุง ูุงู ุงูุฌุฑูุญ ูุณุฌูุงู ูููู ุฃูุฑุ ุงุณุชุฎุฏู ููุณ ุฑูู ุงููููุฉ' },
    { 'ุงูุญููู': '' },
    { 'ุงูุญููู': '๐ ูุตุงุฆุญ ุนุงูุฉ:' },
    { 'ุงูุญููู': 'โข ูุง ุชุชุฑู ุฃู ุญูู ูุทููุจ ูุงุฑุบุงู' },
    { 'ุงูุญููู': 'โข ุงุณุชุฎุฏู ุฃุฑูุงู ุงููููุฉ ููุง ูู ุจุฏูู ุชูุณูู' },
    { 'ุงูุญููู': 'โข ูู ุญุงูุฉ ุงุณุชูุฑุงุฑ ุงููุดุงููุ ุฑุงุฌุน ูุฑูุฉ ุงูุชุนูููุงุช ูู ุงููุงูุจ' }
  ];

  const solutionsWorksheet = XLSX.utils.json_to_sheet(solutionsData);
  solutionsWorksheet['!dir'] = 'rtl';
  solutionsWorksheet['!cols'] = [{ wch: 80 }];

  const workbook = XLSX.utils.book_new();
  XLSX.utils.book_append_sheet(workbook, worksheet, 'ุฃุฎุทุงุก ุงูุงุณุชูุฑุงุฏ');
  XLSX.utils.book_append_sheet(workbook, solutionsWorksheet, 'ุงูุญููู ูุงููุตุงุฆุญ');

  workbook.Props = {
    Title: 'ุฃุฎุทุงุก ุงุณุชูุฑุงุฏ ุงูุฌุฑุญู',
    Subject: 'ุชูุฑูุฑ ููุตู ููุฃุฎุทุงุก ูู ุนูููุฉ ุงุณุชูุฑุงุฏ ุงูุฌุฑุญู ูุน ุงูุญููู',
    Author: 'ูุธุงู ุงููุณุงุนุฏุงุช - ูุทุงุน ุบุฒุฉ',
    CreatedDate: new Date()
  };

  return workbook;
};

// ุชุญููู ููู Excel
export const downloadExcelFile = (workbook: XLSX.WorkBook, filename: string) => {
  const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });
  const data = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
  
  const link = document.createElement('a');
  link.href = URL.createObjectURL(data);
  link.download = `${filename}.xlsx`;
  link.click();
  
  // ุชูุธูู ุงูุฐุงูุฑุฉ
  URL.revokeObjectURL(link.href);
};